% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assimilacao.R
\name{funcao_objetivo_assimilacao_pmur}
\alias{funcao_objetivo_assimilacao_pmur}
\title{Funcao objetivo da assimilacao oficial}
\usage{
funcao_objetivo_assimilacao_pmur(
  vetor_variaveis,
  vetor_modelo,
  TuInic,
  precipitacao_ponderada,
  evapotranspiracao,
  evapotranspiracao_planicie,
  vazao,
  area,
  numero_dias_assimilacao,
  pesos_funcao_objetivo = rep((1/numero_dias_assimilacao), numero_dias_assimilacao),
  funcao_objetivo = calcula_dm
)
}
\arguments{
\item{vetor_variaveis}{vetor com os parametros:
\itemize{
\item{pesos - pesos da ponderacao da precipitacao}
\item{Ebin - vazao de base inicial}
\item{Supin - vazao superficial inicial}
}}

\item{vetor_modelo}{vetor resultante de unlist do objeto de classe smap_ons}

\item{TuInic}{percentual de umidade do solo inicial}

\item{precipitacao_ponderada}{Vetor de precipitacao final (ja corrigido e/ou ponderado)}

\item{evapotranspiracao}{Vetor de ETo do final(ja corrigido e/ou ponderado)}

\item{evapotranspiracao_planicie}{Vetor de ETo de planicie do final(ja corrigido e/ou ponderado)}

\item{vazao}{vetor de vazao observada}

\item{area}{area da sub-bacia}

\item{numero_dias_assimilacao}{numero de dias da assimilacao}

\item{pesos_funcao_objetivo}{vetor de pesos da funcao objetivo}

\item{funcao_objetivo}{funcao objetivo a ser utilizada na assimilacao}
}
\value{
objetivo valor da funcao objetivo
}
\description{
Funcao objetivo de assimilacao de dados oficial do SMAP/ONS
}
\examples{

# usando dado dummy contido no pacote
sub_bacia <- "baixoig"
data_rodada <- as.Date('2020/01/01')
dias_assimilacao <- 31
numero_dias <- dias_assimilacao
EbInic <- historico_vazao[data == (data_rodada - dias_assimilacao + 1) & posto == sub_bacia, valor] / 2
Supin <- historico_vazao[data == (data_rodada - dias_assimilacao + 1) & posto == sub_bacia, valor] / 2
TuInic <- 0.5

modelo <- new_modelo_smap_ons(parametros[nome == sub_bacia], postos_plu[nome == sub_bacia])
vetor_modelo <- unlist(modelo)
area <- attributes(modelo)$area

vazao <- historico_vazao[data < data_rodada & data >= (data_rodada - dias_assimilacao) 
                        & posto == sub_bacia, valor]
normal_climatologica <- historico_etp_NC[nome == sub_bacia]

kt_max <- sum(modelo$kt[1:2] > 0)
kt_min <- sum(modelo$kt[4:63] > 0)
precipitacao <- historico_precipitacao[data < (data_rodada + kt_max) & data >= (data_rodada - dias_assimilacao - kt_min) & posto == 'psatbigu']
precipitacao <- ponderacao_espacial(precipitacao, postos_plu[nome == sub_bacia])

evapotranspiracao <- transforma_NC_serie(precipitacao[data < data_rodada & data >= (data_rodada - dias_assimilacao)], normal_climatologica) 
evapotranspiracao_planicie <- evapotranspiracao[, valor] * vetor_modelo[77]
evapotranspiracao <- evapotranspiracao[, valor] * vetor_modelo[76]

kt <- vetor_modelo[12:74]
precipitacao_ponderada <- data.table::data.table(precipitacao)
precipitacao_ponderada[, valor := valor * vetor_modelo[75]]
precipitacao_ponderada <- ponderacao_temporal(precipitacao_ponderada[, valor], kt, kt_max, kt_min)

pesos <- rep(1, numero_dias)
vetor_parametros <- c(pesos, EbInic, Supin)

fo <- funcao_objetivo_assimilacao_oficial(vetor_parametros, vetor_modelo, TuInic, 
     precipitacao_ponderada, evapotranspiracao, evapotranspiracao_planicie, vazao, area,
     numero_dias)
fo

}
