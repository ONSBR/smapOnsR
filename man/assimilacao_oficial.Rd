% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assimilacao.R
\name{assimilacao_oficial}
\alias{assimilacao_oficial}
\title{Assimilacao oficial}
\usage{
assimilacao_oficial(
  vetor_modelo,
  area,
  EbInic,
  TuInic,
  Supin,
  precipitacao_assimilacao,
  evapotranspiracao,
  evapotranspiracao_planicie,
  vazao,
  numero_dias_assimilacao,
  limite_prec = c(0.5, 2),
  limite_ebin = c(0.8, 1.2),
  limite_supin = c(0, 2),
  funcao_objetivo = calcula_dm,
  fnscale = 1
)
}
\arguments{
\item{vetor_modelo}{objeto de classe smap_ons}

\item{area}{area da sub-bacia}

\item{EbInic}{Escoamento Subterraneo inicial}

\item{TuInic}{Taxa de umidade inicial do solo}

\item{Supin}{Escoamento superficial inicial}

\item{precipitacao_assimilacao}{data table com a precipitacao a ser ponderada com as colunas
\itemize{
\item{data - data da observacao}
\item{posto - nome do posto}
\item{valor - valor da variavel}
}}

\item{evapotranspiracao}{vetor de evapotranspiracao}

\item{evapotranspiracao_planicie}{vetor de evapotranspiracao do reservatorio de planicie}

\item{vazao}{vetor de vazao observada}

\item{numero_dias_assimilacao}{numero de dias da assimilacao}

\item{limite_prec}{limites mínimo e máximo dos pesos utilizados para ponderar a precipitacao durante a etapa de assimilacao}

\item{limite_ebin}{limites mínimo e máximo da vazao de base inicial}

\item{limite_supin}{limites mínimo e máximo da vazao superficial inicial}

\item{funcao_objetivo}{funcao objetivo a ser utilizada na assimilacao}

\item{fnscale}{valor indicando se a funcao deve ser maximizada ou minimizada}
}
\value{
lista contendo
\itemize{
\item{par - parametros otimizados send}
\item{value - valor da funcao objetivo utilizado}
\item{id - id do posto}
\item{valor - valor da variavel}
}
}
\description{
Realiza a assimilacao de dados com a metodologia oficial
}
\examples{

# usando dado dummy contido no pacote
sub_bacia <- "baixoig"
data_rodada <- as.Date('2020/01/01')
dias_assimilacao <- 31
numero_dias <- dias_assimilacao
EbInic <- historico_vazao[data == (data_rodada - dias_assimilacao + 1) & posto == sub_bacia, valor] / 2
Supin <- historico_vazao[data == (data_rodada - dias_assimilacao + 1) & posto == sub_bacia, valor] / 2
TuInic <- 0.5

modelo <- new_modelo_smap_ons(parametros[nome == sub_bacia], postos_plu[nome == sub_bacia])
vetor_modelo <- unlist(modelo)
area <- attributes(modelo)$area

vazao <- historico_vazao[data < data_rodada & data >= (data_rodada - dias_assimilacao) 
                        & posto == sub_bacia, valor]
normal_climatologica <- historico_etp_NC[nome == sub_bacia]

kt_max <- sum(modelo$kt[1:2] > 0)
kt_min <- sum(modelo$kt[4:63] > 0)
precipitacao <- historico_precipitacao[data < (data_rodada + kt_max) & data >= (data_rodada - dias_assimilacao - kt_min) & posto == 'psatbigu']
precipitacao <- ponderacao_espacial(precipitacao, postos_plu[nome == sub_bacia])

evapotranspiracao <- transforma_NC_serie(precipitacao[data < data_rodada & data >= (data_rodada - dias_assimilacao)], normal_climatologica) 
evapotranspiracao_planicie <- evapotranspiracao[, valor] * vetor_modelo[77]
evapotranspiracao <- evapotranspiracao[, valor] * vetor_modelo[76]

kt <- vetor_modelo[12:74]
precipitacao_ponderada <- data.table::data.table(precipitacao)
precipitacao_ponderada[, valor := valor * vetor_modelo[75]]
precipitacao_ponderada <- ponderacao_temporal(precipitacao_ponderada[, valor], kt, kt_max, kt_min)
\dontrun{
saida <- assimilacao_oficial(vetor_modelo, area, EbInic, TuInic, Supin, precipitacao,
       evapotranspiracao, evapotranspiracao_planicie, vazao, numero_dias = dias_assimilacao
saida
}
}
